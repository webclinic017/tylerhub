{
  "uid" : "43b79c1e6821a068",
  "name" : "test_orderList[data0]",
  "fullName" : "demo.order_list.action.test_order_list.Test_verify_order_list#test_orderList",
  "historyId" : "75f7695a540a724597d49991a7368041",
  "time" : {
    "start" : 1637204064900,
    "stop" : 1637204137819,
    "duration" : 72919
  },
  "description" : "读取测试文档数据，执行用例",
  "descriptionHtml" : "<p>读取测试文档数据，执行用例</p>\n",
  "status" : "broken",
  "statusMessage" : "TypeError: can only concatenate str (not \"int\") to str",
  "statusTrace" : "self = <test_order_list.Test_verify_order_list object at 0x090597D8>, data = {'主账号': 1000005349.0, '交易账号': 672005306.0, '商品代码': 'CADJPY'}\n\n    @allure.feature('根据交易账号查询已平仓未平仓订单')\n    @allure.story('用例执行')\n    @allure.description('读取测试文档数据，执行用例')\n    @pytest.mark.parametrize('data',testdata)\n    def test_orderList(self,data):\n    \n        print('当前查询账号：{}'.format(int(data['主账号'])))\n    \n        with allure.step('获取当前测试数据下标'):\n            self.data_index=testdata.index(data)\n    \n        with allure.step('bos登录cp'):\n            verifyOrder.logincp(int(data['主账号']))\n    \n        with allure.step('查询交易账号所有平仓未平仓订单'):\n            verifyOrder.search_order_len(672005306)\n    \n        #判断交易账号是否存在未平仓订单\n        with allure.step('判断交易账号是否存在未平仓订单'):\n            if verifyOrder.open_order_len!=0:\n                with allure.step('交易账号存在未平仓订单'):\n                    with allure.step('断言导出数据是否与页面一致'):\n                        for i in range(0,verifyOrder.open_order_len):\n    \n                            with allure.step('断言下载文件订单号：{}，页面订单号：{}'.format(verifyOrder.openOrderexcel_data[i]['订单号码'],verifyOrder.open_orderList[i]['订单号码'])):\n                                check.equal(int(verifyOrder.openOrderexcel_data[i]['订单号码']),verifyOrder.open_orderList[i]['订单号码'],'第{}条数据断言失败：'\n                                '下载文件订单号：{}，页面订单号：{}'.format(i+1,verifyOrder.openOrderexcel_data[i]['订单号码'],verifyOrder.open_orderList[i]['订单号码']))\n    \n                            with allure.step('断言下载文件交易账号：{}，页面交易账号：{}'.format(verifyOrder.openOrderexcel_data[i]['交易账号'],verifyOrder.open_orderList[i]['交易账户'])):\n                                check.equal(int(verifyOrder.openOrderexcel_data[i]['交易账号']),verifyOrder.open_orderList[i]['交易账户'],'第{}条数据断言失败：'\n                                '下载文件交易账号：{}，页面交易账号：{}'.format(i+1,verifyOrder.openOrderexcel_data[i]['交易账号'],verifyOrder.open_orderList[i]['交易账户']))\n    \n                            with allure.step('断言下载文件开仓时间：{}，页面开仓时间：{}'.format(verifyOrder.openOrderexcel_data[i]['开仓时间'],verifyOrder.open_orderList[i]['开仓时间'])):\n                                check.equal(verifyOrder.openOrderexcel_data[i]['开仓时间'],verifyOrder.open_orderList[i]['开仓时间'],'第{}条数据断言失败：'\n                                '下载文件开仓时间：{}，页面开仓时间：{}'.format(i+1,verifyOrder.openOrderexcel_data[i]['开仓时间'],verifyOrder.open_orderList[i]['开仓时间']))\n    \n                            with allure.step('断言下载文件类型：{}，页面类型：{}'.format(verifyOrder.openOrderexcel_data[i]['类型'],verifyOrder.open_orderList[i]['类型'])):\n                                check.equal(verifyOrder.openOrderexcel_data[i]['类型'],verifyOrder.open_orderList[i]['类型'],'第{}条数据断言失败：'\n                                '下载文件类型：{}，页面类型：{}'.format(i+1,verifyOrder.openOrderexcel_data[i]['类型'],verifyOrder.open_orderList[i]['类型']))\n    \n>                           with allure.step('断言下载文件手数：{}，页面交易量：{}'.format(float(verifyOrder.openOrderexcel_data[i]['手数']+1),verifyOrder.open_orderList[i]['交易量'])):\nE                           TypeError: can only concatenate str (not \"int\") to str\n\ndemo\\order_list\\action\\test_order_list.py:97: TypeError",
  "flaky" : false,
  "newFailed" : false,
  "beforeStages" : [ {
    "name" : "xunit_setup_class_fixture_Test_verify_order_list",
    "time" : {
      "start" : 1637204048549,
      "stop" : 1637204064893,
      "duration" : 16344
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "shouldDisplayMessage" : false,
    "attachmentsCount" : 0,
    "hasContent" : false,
    "stepsCount" : 0
  } ],
  "testStage" : {
    "description" : "读取测试文档数据，执行用例",
    "status" : "broken",
    "statusMessage" : "TypeError: can only concatenate str (not \"int\") to str",
    "statusTrace" : "self = <test_order_list.Test_verify_order_list object at 0x090597D8>, data = {'主账号': 1000005349.0, '交易账号': 672005306.0, '商品代码': 'CADJPY'}\n\n    @allure.feature('根据交易账号查询已平仓未平仓订单')\n    @allure.story('用例执行')\n    @allure.description('读取测试文档数据，执行用例')\n    @pytest.mark.parametrize('data',testdata)\n    def test_orderList(self,data):\n    \n        print('当前查询账号：{}'.format(int(data['主账号'])))\n    \n        with allure.step('获取当前测试数据下标'):\n            self.data_index=testdata.index(data)\n    \n        with allure.step('bos登录cp'):\n            verifyOrder.logincp(int(data['主账号']))\n    \n        with allure.step('查询交易账号所有平仓未平仓订单'):\n            verifyOrder.search_order_len(672005306)\n    \n        #判断交易账号是否存在未平仓订单\n        with allure.step('判断交易账号是否存在未平仓订单'):\n            if verifyOrder.open_order_len!=0:\n                with allure.step('交易账号存在未平仓订单'):\n                    with allure.step('断言导出数据是否与页面一致'):\n                        for i in range(0,verifyOrder.open_order_len):\n    \n                            with allure.step('断言下载文件订单号：{}，页面订单号：{}'.format(verifyOrder.openOrderexcel_data[i]['订单号码'],verifyOrder.open_orderList[i]['订单号码'])):\n                                check.equal(int(verifyOrder.openOrderexcel_data[i]['订单号码']),verifyOrder.open_orderList[i]['订单号码'],'第{}条数据断言失败：'\n                                '下载文件订单号：{}，页面订单号：{}'.format(i+1,verifyOrder.openOrderexcel_data[i]['订单号码'],verifyOrder.open_orderList[i]['订单号码']))\n    \n                            with allure.step('断言下载文件交易账号：{}，页面交易账号：{}'.format(verifyOrder.openOrderexcel_data[i]['交易账号'],verifyOrder.open_orderList[i]['交易账户'])):\n                                check.equal(int(verifyOrder.openOrderexcel_data[i]['交易账号']),verifyOrder.open_orderList[i]['交易账户'],'第{}条数据断言失败：'\n                                '下载文件交易账号：{}，页面交易账号：{}'.format(i+1,verifyOrder.openOrderexcel_data[i]['交易账号'],verifyOrder.open_orderList[i]['交易账户']))\n    \n                            with allure.step('断言下载文件开仓时间：{}，页面开仓时间：{}'.format(verifyOrder.openOrderexcel_data[i]['开仓时间'],verifyOrder.open_orderList[i]['开仓时间'])):\n                                check.equal(verifyOrder.openOrderexcel_data[i]['开仓时间'],verifyOrder.open_orderList[i]['开仓时间'],'第{}条数据断言失败：'\n                                '下载文件开仓时间：{}，页面开仓时间：{}'.format(i+1,verifyOrder.openOrderexcel_data[i]['开仓时间'],verifyOrder.open_orderList[i]['开仓时间']))\n    \n                            with allure.step('断言下载文件类型：{}，页面类型：{}'.format(verifyOrder.openOrderexcel_data[i]['类型'],verifyOrder.open_orderList[i]['类型'])):\n                                check.equal(verifyOrder.openOrderexcel_data[i]['类型'],verifyOrder.open_orderList[i]['类型'],'第{}条数据断言失败：'\n                                '下载文件类型：{}，页面类型：{}'.format(i+1,verifyOrder.openOrderexcel_data[i]['类型'],verifyOrder.open_orderList[i]['类型']))\n    \n>                           with allure.step('断言下载文件手数：{}，页面交易量：{}'.format(float(verifyOrder.openOrderexcel_data[i]['手数']+1),verifyOrder.open_orderList[i]['交易量'])):\nE                           TypeError: can only concatenate str (not \"int\") to str\n\ndemo\\order_list\\action\\test_order_list.py:97: TypeError",
    "steps" : [ {
      "name" : "获取当前测试数据下标",
      "time" : {
        "start" : 1637204064918,
        "stop" : 1637204064919,
        "duration" : 1
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "shouldDisplayMessage" : false,
      "attachmentsCount" : 0,
      "hasContent" : false,
      "stepsCount" : 0
    }, {
      "name" : "bos登录cp",
      "time" : {
        "start" : 1637204064919,
        "stop" : 1637204068959,
        "duration" : 4040
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "shouldDisplayMessage" : false,
      "attachmentsCount" : 0,
      "hasContent" : false,
      "stepsCount" : 0
    }, {
      "name" : "查询交易账号所有平仓未平仓订单",
      "time" : {
        "start" : 1637204068959,
        "stop" : 1637204131589,
        "duration" : 62630
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "shouldDisplayMessage" : false,
      "attachmentsCount" : 0,
      "hasContent" : false,
      "stepsCount" : 0
    }, {
      "name" : "判断交易账号是否存在未平仓订单",
      "time" : {
        "start" : 1637204131589,
        "stop" : 1637204131593,
        "duration" : 4
      },
      "status" : "broken",
      "statusMessage" : "TypeError: can only concatenate str (not \"int\") to str\n",
      "statusTrace" : "  File \"c:\\Users\\tyler.tang\\Desktop\\code\\tylerhub\\demo\\order_list\\action\\test_order_list.py\", line 97, in test_orderList\n    with allure.step('断言下载文件手数：{}，页面交易量：{}'.format(float(verifyOrder.openOrderexcel_data[i]['手数']+1),verifyOrder.open_orderList[i]['交易量'])):\n",
      "steps" : [ {
        "name" : "交易账号存在未平仓订单",
        "time" : {
          "start" : 1637204131590,
          "stop" : 1637204131592,
          "duration" : 2
        },
        "status" : "broken",
        "statusMessage" : "TypeError: can only concatenate str (not \"int\") to str\n",
        "statusTrace" : "  File \"c:\\Users\\tyler.tang\\Desktop\\code\\tylerhub\\demo\\order_list\\action\\test_order_list.py\", line 97, in test_orderList\n    with allure.step('断言下载文件手数：{}，页面交易量：{}'.format(float(verifyOrder.openOrderexcel_data[i]['手数']+1),verifyOrder.open_orderList[i]['交易量'])):\n",
        "steps" : [ {
          "name" : "断言导出数据是否与页面一致",
          "time" : {
            "start" : 1637204131590,
            "stop" : 1637204131591,
            "duration" : 1
          },
          "status" : "broken",
          "statusMessage" : "TypeError: can only concatenate str (not \"int\") to str\n",
          "statusTrace" : "  File \"c:\\Users\\tyler.tang\\Desktop\\code\\tylerhub\\demo\\order_list\\action\\test_order_list.py\", line 97, in test_orderList\n    with allure.step('断言下载文件手数：{}，页面交易量：{}'.format(float(verifyOrder.openOrderexcel_data[i]['手数']+1),verifyOrder.open_orderList[i]['交易量'])):\n",
          "steps" : [ {
            "name" : "断言下载文件订单号：544118.0，页面订单号：544118",
            "time" : {
              "start" : 1637204131590,
              "stop" : 1637204131590,
              "duration" : 0
            },
            "status" : "passed",
            "steps" : [ ],
            "attachments" : [ ],
            "parameters" : [ ],
            "shouldDisplayMessage" : false,
            "attachmentsCount" : 0,
            "hasContent" : false,
            "stepsCount" : 0
          }, {
            "name" : "断言下载文件交易账号：672005306.0，页面交易账号：672005306",
            "time" : {
              "start" : 1637204131590,
              "stop" : 1637204131590,
              "duration" : 0
            },
            "status" : "passed",
            "steps" : [ ],
            "attachments" : [ ],
            "parameters" : [ ],
            "shouldDisplayMessage" : false,
            "attachmentsCount" : 0,
            "hasContent" : false,
            "stepsCount" : 0
          }, {
            "name" : "断言下载文件开仓时间：2021-11-05 12:09:13，页面开仓时间：2021-11-05 12:09:13",
            "time" : {
              "start" : 1637204131590,
              "stop" : 1637204131591,
              "duration" : 1
            },
            "status" : "passed",
            "steps" : [ ],
            "attachments" : [ ],
            "parameters" : [ ],
            "shouldDisplayMessage" : false,
            "attachmentsCount" : 0,
            "hasContent" : false,
            "stepsCount" : 0
          }, {
            "name" : "断言下载文件类型：卖，页面类型：卖",
            "time" : {
              "start" : 1637204131591,
              "stop" : 1637204131591,
              "duration" : 0
            },
            "status" : "passed",
            "steps" : [ ],
            "attachments" : [ ],
            "parameters" : [ ],
            "shouldDisplayMessage" : false,
            "attachmentsCount" : 0,
            "hasContent" : false,
            "stepsCount" : 0
          } ],
          "attachments" : [ ],
          "parameters" : [ ],
          "shouldDisplayMessage" : true,
          "attachmentsCount" : 0,
          "hasContent" : true,
          "stepsCount" : 4
        } ],
        "attachments" : [ ],
        "parameters" : [ ],
        "shouldDisplayMessage" : false,
        "attachmentsCount" : 0,
        "hasContent" : true,
        "stepsCount" : 5
      } ],
      "attachments" : [ ],
      "parameters" : [ ],
      "shouldDisplayMessage" : false,
      "attachmentsCount" : 0,
      "hasContent" : true,
      "stepsCount" : 6
    } ],
    "attachments" : [ ],
    "parameters" : [ ],
    "shouldDisplayMessage" : true,
    "attachmentsCount" : 0,
    "hasContent" : true,
    "stepsCount" : 10
  },
  "afterStages" : [ {
    "name" : "xunit_setup_class_fixture_Test_verify_order_list::0",
    "time" : {
      "start" : 1637204144356,
      "stop" : 1637204144356,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "shouldDisplayMessage" : false,
    "attachmentsCount" : 0,
    "hasContent" : false,
    "stepsCount" : 0
  } ],
  "labels" : [ {
    "name" : "feature",
    "value" : "根据交易账号查询已平仓未平仓订单"
  }, {
    "name" : "story",
    "value" : "用例执行"
  }, {
    "name" : "parentSuite",
    "value" : "demo.order_list.action"
  }, {
    "name" : "suite",
    "value" : "test_order_list"
  }, {
    "name" : "subSuite",
    "value" : "Test_verify_order_list"
  }, {
    "name" : "host",
    "value" : "SZ01-QA-G-10"
  }, {
    "name" : "thread",
    "value" : "10396-MainThread"
  }, {
    "name" : "framework",
    "value" : "pytest"
  }, {
    "name" : "language",
    "value" : "cpython3"
  }, {
    "name" : "package",
    "value" : "demo.order_list.action.test_order_list"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ {
    "name" : "data",
    "value" : "{'主账号': 1000005349.0, '交易账号': 672005306.0, '商品代码': 'CADJPY'}"
  } ],
  "links" : [ ],
  "hidden" : true,
  "retry" : true,
  "extra" : {
    "categories" : [ ],
    "tags" : [ ]
  },
  "source" : "43b79c1e6821a068.json",
  "parameterValues" : [ "{'主账号': 1000005349.0, '交易账号': 672005306.0, '商品代码': 'CADJPY'}" ]
}