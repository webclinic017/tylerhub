{"name": "test_ewallet[data0]", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.NoSuchWindowException: Message: no such window: target window already closed\nfrom unknown error: web view not found\n  (Session info: chrome=92.0.4515.159)", "trace": "self = <test_add_ewallet.Test_addEwallet object at 0x06F1F7D8>, data = {'主账号': 1200008143.0, '密码': 'Tl123456', '邮箱': '235345346@qq.com'}\n\n    @allure.feature('会员中心判断ewallet电子钱包是否超过三条，否则添加至三条，并且验证是否可以及数据库中是否添加成功')\n    @allure.story('用例执行')\n    @allure.description('读取测试文档数据，执行用例：登录CP判断电子钱包出金方式是否超过三条')\n    @pytest.mark.parametrize('data',testdata)\n    @pytest.mark.flaky(reruns=2, reruns_delay=2) #失败重跑\n    def test_ewallet(self,data):\n        print('当前测试数据：主账号：{}，邮箱：{}'.format(int(data['主账号']),data['邮箱']))\n    \n        with allure.step('获取当前测试数据下标'):\n            self.data_index=testdata.index(data)\n        if self.data_index!=0:\n            openDemo.remove_login_topup()\n    \n        with allure.step('进入账号详情页判断该账号居住国是否为中国'):\n            addEwaller.details_page(int(data['主账号']))\n            #居住国家为中国，跳过该用例\n            if addEwaller.get_live_country():\n                pytest.skip()\n            else:\n                with allure.step('登录会员中心判断电子钱包出金方式是否超过三条'):\n                    addEwaller.logincp(data['邮箱'], data['密码'])\n                    addEwaller.is_ewallet_morethan_three()\n                    with open(addEwaller.screenshots_path('ewallet出金方式'),'rb') as f: #二进制打开截图文件\n                        comtent=f.read()\n                    allure.attach(comtent,'ewallet出金方式',allure.attachment_type.PNG)\n    \n                with allure.step('获取提示语'):\n                    addEwaller.get_tips()\n>                   with open(addEwaller.screenshots_path('提示语'),'rb') as f: #二进制打开截图文件\n\ndemo\\add_ewallet_withdrawal\\action_bin\\test_add_ewallet.py:76: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\ndemo\\add_ewallet_withdrawal\\location\\location_of_add_ewallet.py:337: in screenshots_path\n    return common.get_screenpict_path(name)\ndemo\\public\\browser_actions.py:357: in get_screenpict_path\n    self.get_screenpict(name, filename)\ndemo\\public\\browser_actions.py:347: in get_screenpict\n    self.picture=self.driver.get_screenshot_as_file(os.path.join(self.pictdir_path,'{}{}.png'.format(name,self.pict_name)))\n..\\..\\..\\Program Files\\Python38-32\\lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py:1032: in get_screenshot_as_file\n    png = self.get_screenshot_as_png()\n..\\..\\..\\Program Files\\Python38-32\\lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py:1064: in get_screenshot_as_png\n    return base64.b64decode(self.get_screenshot_as_base64().encode('ascii'))\n..\\..\\..\\Program Files\\Python38-32\\lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py:1074: in get_screenshot_as_base64\n    return self.execute(Command.SCREENSHOT)['value']\n..\\..\\..\\Program Files\\Python38-32\\lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py:321: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x06F1F9B8>\nresponse = {'status': 404, 'value': '{\"value\":{\"error\":\"no such window\",\"message\":\"no such window: target window already closed\\\\...\\n\\\\tRtlGetAppContainerNamedObjectPath [0x776A7A7E+286]\\\\n\\\\tRtlGetAppContainerNamedObjectPath [0x776A7A4E+238]\\\\n\"}}'}\n\n    def check_response(self, response):\n        \"\"\"\n        Checks that a JSON response from the WebDriver does not have an error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get('status', None)\n        if status is None or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get('value', None)\n            if value_json and isinstance(value_json, basestring):\n                import json\n                try:\n                    value = json.loads(value_json)\n                    if len(value.keys()) == 1:\n                        value = value['value']\n                    status = value.get('error', None)\n                    if status is None:\n                        status = value[\"status\"]\n                        message = value[\"value\"]\n                        if not isinstance(message, basestring):\n                            value = message\n                            message = message.get('message')\n                    else:\n                        message = value.get('message', None)\n                except ValueError:\n                    pass\n    \n        exception_class = ErrorInResponseException\n        if status in ErrorCode.NO_SUCH_ELEMENT:\n            exception_class = NoSuchElementException\n        elif status in ErrorCode.NO_SUCH_FRAME:\n            exception_class = NoSuchFrameException\n        elif status in ErrorCode.NO_SUCH_WINDOW:\n            exception_class = NoSuchWindowException\n        elif status in ErrorCode.STALE_ELEMENT_REFERENCE:\n            exception_class = StaleElementReferenceException\n        elif status in ErrorCode.ELEMENT_NOT_VISIBLE:\n            exception_class = ElementNotVisibleException\n        elif status in ErrorCode.INVALID_ELEMENT_STATE:\n            exception_class = InvalidElementStateException\n        elif status in ErrorCode.INVALID_SELECTOR \\\n                or status in ErrorCode.INVALID_XPATH_SELECTOR \\\n                or status in ErrorCode.INVALID_XPATH_SELECTOR_RETURN_TYPER:\n            exception_class = InvalidSelectorException\n        elif status in ErrorCode.ELEMENT_IS_NOT_SELECTABLE:\n            exception_class = ElementNotSelectableException\n        elif status in ErrorCode.ELEMENT_NOT_INTERACTABLE:\n            exception_class = ElementNotInteractableException\n        elif status in ErrorCode.INVALID_COOKIE_DOMAIN:\n            exception_class = InvalidCookieDomainException\n        elif status in ErrorCode.UNABLE_TO_SET_COOKIE:\n            exception_class = UnableToSetCookieException\n        elif status in ErrorCode.TIMEOUT:\n            exception_class = TimeoutException\n        elif status in ErrorCode.SCRIPT_TIMEOUT:\n            exception_class = TimeoutException\n        elif status in ErrorCode.UNKNOWN_ERROR:\n            exception_class = WebDriverException\n        elif status in ErrorCode.UNEXPECTED_ALERT_OPEN:\n            exception_class = UnexpectedAlertPresentException\n        elif status in ErrorCode.NO_ALERT_OPEN:\n            exception_class = NoAlertPresentException\n        elif status in ErrorCode.IME_NOT_AVAILABLE:\n            exception_class = ImeNotAvailableException\n        elif status in ErrorCode.IME_ENGINE_ACTIVATION_FAILED:\n            exception_class = ImeActivationFailedException\n        elif status in ErrorCode.MOVE_TARGET_OUT_OF_BOUNDS:\n            exception_class = MoveTargetOutOfBoundsException\n        elif status in ErrorCode.JAVASCRIPT_ERROR:\n            exception_class = JavascriptException\n        elif status in ErrorCode.SESSION_NOT_CREATED:\n            exception_class = SessionNotCreatedException\n        elif status in ErrorCode.INVALID_ARGUMENT:\n            exception_class = InvalidArgumentException\n        elif status in ErrorCode.NO_SUCH_COOKIE:\n            exception_class = NoSuchCookieException\n        elif status in ErrorCode.UNABLE_TO_CAPTURE_SCREEN:\n            exception_class = ScreenshotException\n        elif status in ErrorCode.ELEMENT_CLICK_INTERCEPTED:\n            exception_class = ElementClickInterceptedException\n        elif status in ErrorCode.INSECURE_CERTIFICATE:\n            exception_class = InsecureCertificateException\n        elif status in ErrorCode.INVALID_COORDINATES:\n            exception_class = InvalidCoordinatesException\n        elif status in ErrorCode.INVALID_SESSION_ID:\n            exception_class = InvalidSessionIdException\n        elif status in ErrorCode.UNKNOWN_METHOD:\n            exception_class = UnknownMethodException\n        else:\n            exception_class = WebDriverException\n        if value == '' or value is None:\n            value = response['value']\n        if isinstance(value, basestring):\n            if exception_class == ErrorInResponseException:\n                raise exception_class(response, value)\n            raise exception_class(value)\n        if message == \"\" and 'message' in value:\n            message = value['message']\n    \n        screen = None\n        if 'screen' in value:\n            screen = value['screen']\n    \n        stacktrace = None\n        if 'stackTrace' in value and value['stackTrace']:\n            stacktrace = []\n            try:\n                for frame in value['stackTrace']:\n                    line = self._value_or_default(frame, 'lineNumber', '')\n                    file = self._value_or_default(frame, 'fileName', '<anonymous>')\n                    if line:\n                        file = \"%s:%s\" % (file, line)\n                    meth = self._value_or_default(frame, 'methodName', '<anonymous>')\n                    if 'className' in frame:\n                        meth = \"%s.%s\" % (frame['className'], meth)\n                    msg = \"    at %s (%s)\"\n                    msg = msg % (meth, file)\n                    stacktrace.append(msg)\n            except TypeError:\n                pass\n        if exception_class == ErrorInResponseException:\n            raise exception_class(response, message)\n        elif exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if 'data' in value:\n                alert_text = value['data'].get('text')\n            elif 'alert' in value:\n                alert_text = value['alert'].get('text')\n            raise exception_class(message, screen, stacktrace, alert_text)\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.NoSuchWindowException: Message: no such window: target window already closed\nE       from unknown error: web view not found\nE         (Session info: chrome=92.0.4515.159)\n\n..\\..\\..\\Program Files\\Python38-32\\lib\\site-packages\\selenium\\webdriver\\remote\\errorhandler.py:242: NoSuchWindowException"}, "description": "读取测试文档数据，执行用例：登录CP判断电子钱包出金方式是否超过三条", "steps": [{"name": "获取当前测试数据下标", "status": "passed", "start": 1631000040369, "stop": 1631000040369}, {"name": "进入账号详情页判断该账号居住国是否为中国", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.NoSuchWindowException: Message: no such window: target window already closed\nfrom unknown error: web view not found\n  (Session info: chrome=92.0.4515.159)\n\n", "trace": "  File \"c:\\Users\\tyler.tang\\Desktop\\code\\tylerhub\\demo\\add_ewallet_withdrawal\\action_bin\\test_add_ewallet.py\", line 76, in test_ewallet\n    with open(addEwaller.screenshots_path('提示语'),'rb') as f: #二进制打开截图文件\n  File \"c:\\Users\\tyler.tang\\Desktop\\code\\tylerhub\\demo\\add_ewallet_withdrawal\\location\\location_of_add_ewallet.py\", line 337, in screenshots_path\n    return common.get_screenpict_path(name)\n  File \"c:\\Users\\tyler.tang\\Desktop\\code\\tylerhub\\demo\\public\\browser_actions.py\", line 357, in get_screenpict_path\n    self.get_screenpict(name, filename)\n  File \"c:\\Users\\tyler.tang\\Desktop\\code\\tylerhub\\demo\\public\\browser_actions.py\", line 347, in get_screenpict\n    self.picture=self.driver.get_screenshot_as_file(os.path.join(self.pictdir_path,'{}{}.png'.format(name,self.pict_name)))\n  File \"C:\\Users\\tyler.tang\\Program Files\\Python38-32\\lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py\", line 1032, in get_screenshot_as_file\n    png = self.get_screenshot_as_png()\n  File \"C:\\Users\\tyler.tang\\Program Files\\Python38-32\\lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py\", line 1064, in get_screenshot_as_png\n    return base64.b64decode(self.get_screenshot_as_base64().encode('ascii'))\n  File \"C:\\Users\\tyler.tang\\Program Files\\Python38-32\\lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py\", line 1074, in get_screenshot_as_base64\n    return self.execute(Command.SCREENSHOT)['value']\n  File \"C:\\Users\\tyler.tang\\Program Files\\Python38-32\\lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py\", line 321, in execute\n    self.error_handler.check_response(response)\n  File \"C:\\Users\\tyler.tang\\Program Files\\Python38-32\\lib\\site-packages\\selenium\\webdriver\\remote\\errorhandler.py\", line 242, in check_response\n    raise exception_class(message, screen, stacktrace)\n"}, "steps": [{"name": "登录会员中心判断电子钱包出金方式是否超过三条", "status": "passed", "attachments": [{"name": "ewallet出金方式", "source": "e2206151-e63b-421c-bac9-df4d47e13001-attachment.png", "type": "image/png"}], "start": 1631000052257, "stop": 1631000067424}, {"name": "获取提示语", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.NoSuchWindowException: Message: no such window: target window already closed\nfrom unknown error: web view not found\n  (Session info: chrome=92.0.4515.159)\n\n", "trace": "  File \"c:\\Users\\tyler.tang\\Desktop\\code\\tylerhub\\demo\\add_ewallet_withdrawal\\action_bin\\test_add_ewallet.py\", line 76, in test_ewallet\n    with open(addEwaller.screenshots_path('提示语'),'rb') as f: #二进制打开截图文件\n  File \"c:\\Users\\tyler.tang\\Desktop\\code\\tylerhub\\demo\\add_ewallet_withdrawal\\location\\location_of_add_ewallet.py\", line 337, in screenshots_path\n    return common.get_screenpict_path(name)\n  File \"c:\\Users\\tyler.tang\\Desktop\\code\\tylerhub\\demo\\public\\browser_actions.py\", line 357, in get_screenpict_path\n    self.get_screenpict(name, filename)\n  File \"c:\\Users\\tyler.tang\\Desktop\\code\\tylerhub\\demo\\public\\browser_actions.py\", line 347, in get_screenpict\n    self.picture=self.driver.get_screenshot_as_file(os.path.join(self.pictdir_path,'{}{}.png'.format(name,self.pict_name)))\n  File \"C:\\Users\\tyler.tang\\Program Files\\Python38-32\\lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py\", line 1032, in get_screenshot_as_file\n    png = self.get_screenshot_as_png()\n  File \"C:\\Users\\tyler.tang\\Program Files\\Python38-32\\lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py\", line 1064, in get_screenshot_as_png\n    return base64.b64decode(self.get_screenshot_as_base64().encode('ascii'))\n  File \"C:\\Users\\tyler.tang\\Program Files\\Python38-32\\lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py\", line 1074, in get_screenshot_as_base64\n    return self.execute(Command.SCREENSHOT)['value']\n  File \"C:\\Users\\tyler.tang\\Program Files\\Python38-32\\lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py\", line 321, in execute\n    self.error_handler.check_response(response)\n  File \"C:\\Users\\tyler.tang\\Program Files\\Python38-32\\lib\\site-packages\\selenium\\webdriver\\remote\\errorhandler.py\", line 242, in check_response\n    raise exception_class(message, screen, stacktrace)\n"}, "start": 1631000067424, "stop": 1631000079168}], "start": 1631000040369, "stop": 1631000079171}], "parameters": [{"name": "data", "value": "{'主账号': 1200008143.0, '邮箱': '235345346@qq.com', '密码': 'Tl123456'}"}], "start": 1631000040368, "stop": 1631000079172, "uuid": "e83ab3b3-4ddb-4c3a-b4da-f1bbc0867b5e", "historyId": "ccf26edd8e304520f3375cf8befdf1d8", "testCaseId": "398840a1e5e200c1f49f222d6f91532f", "fullName": "demo.add_ewallet_withdrawal.action_bin.test_add_ewallet.Test_addEwallet#test_ewallet", "labels": [{"name": "feature", "value": "会员中心判断ewallet电子钱包是否超过三条，否则添加至三条，并且验证是否可以及数据库中是否添加成功"}, {"name": "story", "value": "用例执行"}, {"name": "epic", "value": "账户设定添加电子钱包出金方式"}, {"name": "tag", "value": "flaky(reruns=2, reruns_delay=2)"}, {"name": "parentSuite", "value": "demo.add_ewallet_withdrawal.action_bin"}, {"name": "suite", "value": "test_add_ewallet"}, {"name": "subSuite", "value": "Test_addEwallet"}, {"name": "host", "value": "SZ01-QA-G-10"}, {"name": "thread", "value": "8040-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "demo.add_ewallet_withdrawal.action_bin.test_add_ewallet"}]}