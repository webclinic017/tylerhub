{
  "uid" : "3a159775632b49a6",
  "name" : "test_walaopay[data0]",
  "fullName" : "demo.walaopay_deposit.action_bin.test_walaopay_deposti.Test_addEwallet#test_walaopay",
  "historyId" : "9a3b4b2171680ce3817a49a43373fd33",
  "time" : {
    "start" : 1632390561304,
    "stop" : 1632391328386,
    "duration" : 767082
  },
  "description" : "读取测试文档数据，执行用例",
  "descriptionHtml" : "<p>读取测试文档数据，执行用例</p>\n",
  "status" : "broken",
  "statusMessage" : "NameError: name 'alaoPay' is not defined",
  "statusTrace" : "self = <test_walaopay_deposti.Test_addEwallet object at 0x08E51838>, data = {'主账号': 1000005349.0, '交易账号': 672006152.0, '入金前余额': '', '入金后余额': '', ...}\n\n    @allure.feature('bos判断walaopay入金方式是否开启，判断当前账号是否存在该入金方式，测试最低最高金额入金')\n    @allure.story('用例执行')\n    @allure.description('读取测试文档数据，执行用例')\n    @pytest.mark.parametrize('data',testdata)\n    @pytest.mark.flaky(reruns=2, reruns_delay=2) #失败重跑\n    def test_walaopay(self,data):\n        print('当前测试数据：主账号：{}，邮箱：{}'.format(int(data['主账号']),data['邮箱']))\n        with allure.step('获取当前测试数据下标'):\n            self.data_index=testdata.index(data)\n        if self.data_index!=0:\n            walaoPay.remove_login_topup()\n    \n        with allure.step('判断当前账号是否存在walaopay入金方式，不存在则添加walaopay入金方式'):\n            walaoPay.is_have_walaopay(int(data['主账号']))\n    \n        with allure.step('登录cp'):\n            walaoPay.logincp(data['邮箱'],data['密码'])\n    \n        with allure.step('首页获取当前交易账号余额并保存到本地，获取walaopay入金方式最低最高入金金额'):\n            walaoPay.get_highestAndlowest(int(data['交易账号']),excelpath,'E',self.data_index+2)\n    \n        with allure.step('最低最高金额入金'):\n            walaoPay.action(int(data['交易账号']))\n    \n            with open(walaoPay.path1,'rb') as f:\n                comtent=f.read()\n            allure.attach(comtent,'低于最低金额入金',allure.attachment_type.PNG)\n            with open(walaoPay.path2,'rb') as f:\n                comtent=f.read()\n            allure.attach(comtent,'高于最高金额入金',allure.attachment_type.PNG)\n    \n            with allure.step('断言汇率是否与数据库一致,转换金额是否计算正确'):\n                pytest.assume(walaoPay.exchangeRate==walaoPay.baseCharge)\n>               pytest.assume(walaoPay.exchangeAmount==round(walaoPay.lowestDeposit*alaoPay.baseCharge))\nE               NameError: name 'alaoPay' is not defined\n\ndemo\\walaopay_deposit\\action_bin\\test_walaopay_deposti.py:82: NameError",
  "flaky" : false,
  "newFailed" : false,
  "beforeStages" : [ {
    "name" : "xunit_setup_class_fixture_Test_addEwallet",
    "time" : {
      "start" : 1632390498827,
      "stop" : 1632390561273,
      "duration" : 62446
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "hasContent" : false,
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false
  } ],
  "testStage" : {
    "description" : "读取测试文档数据，执行用例",
    "status" : "broken",
    "statusMessage" : "NameError: name 'alaoPay' is not defined",
    "statusTrace" : "self = <test_walaopay_deposti.Test_addEwallet object at 0x08E51838>, data = {'主账号': 1000005349.0, '交易账号': 672006152.0, '入金前余额': '', '入金后余额': '', ...}\n\n    @allure.feature('bos判断walaopay入金方式是否开启，判断当前账号是否存在该入金方式，测试最低最高金额入金')\n    @allure.story('用例执行')\n    @allure.description('读取测试文档数据，执行用例')\n    @pytest.mark.parametrize('data',testdata)\n    @pytest.mark.flaky(reruns=2, reruns_delay=2) #失败重跑\n    def test_walaopay(self,data):\n        print('当前测试数据：主账号：{}，邮箱：{}'.format(int(data['主账号']),data['邮箱']))\n        with allure.step('获取当前测试数据下标'):\n            self.data_index=testdata.index(data)\n        if self.data_index!=0:\n            walaoPay.remove_login_topup()\n    \n        with allure.step('判断当前账号是否存在walaopay入金方式，不存在则添加walaopay入金方式'):\n            walaoPay.is_have_walaopay(int(data['主账号']))\n    \n        with allure.step('登录cp'):\n            walaoPay.logincp(data['邮箱'],data['密码'])\n    \n        with allure.step('首页获取当前交易账号余额并保存到本地，获取walaopay入金方式最低最高入金金额'):\n            walaoPay.get_highestAndlowest(int(data['交易账号']),excelpath,'E',self.data_index+2)\n    \n        with allure.step('最低最高金额入金'):\n            walaoPay.action(int(data['交易账号']))\n    \n            with open(walaoPay.path1,'rb') as f:\n                comtent=f.read()\n            allure.attach(comtent,'低于最低金额入金',allure.attachment_type.PNG)\n            with open(walaoPay.path2,'rb') as f:\n                comtent=f.read()\n            allure.attach(comtent,'高于最高金额入金',allure.attachment_type.PNG)\n    \n            with allure.step('断言汇率是否与数据库一致,转换金额是否计算正确'):\n                pytest.assume(walaoPay.exchangeRate==walaoPay.baseCharge)\n>               pytest.assume(walaoPay.exchangeAmount==round(walaoPay.lowestDeposit*alaoPay.baseCharge))\nE               NameError: name 'alaoPay' is not defined\n\ndemo\\walaopay_deposit\\action_bin\\test_walaopay_deposti.py:82: NameError",
    "steps" : [ {
      "name" : "获取当前测试数据下标",
      "time" : {
        "start" : 1632390587762,
        "stop" : 1632390587763,
        "duration" : 1
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "hasContent" : false,
      "stepsCount" : 0,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false
    }, {
      "name" : "判断当前账号是否存在walaopay入金方式，不存在则添加walaopay入金方式",
      "time" : {
        "start" : 1632390587763,
        "stop" : 1632390619308,
        "duration" : 31545
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "hasContent" : false,
      "stepsCount" : 0,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false
    }, {
      "name" : "登录cp",
      "time" : {
        "start" : 1632390619308,
        "stop" : 1632390632919,
        "duration" : 13611
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "hasContent" : false,
      "stepsCount" : 0,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false
    }, {
      "name" : "首页获取当前交易账号余额并保存到本地，获取walaopay入金方式最低最高入金金额",
      "time" : {
        "start" : 1632390632919,
        "stop" : 1632391280475,
        "duration" : 647556
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "hasContent" : false,
      "stepsCount" : 0,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false
    }, {
      "name" : "最低最高金额入金",
      "time" : {
        "start" : 1632391280475,
        "stop" : 1632391328385,
        "duration" : 47910
      },
      "status" : "broken",
      "statusMessage" : "NameError: name 'alaoPay' is not defined\n",
      "statusTrace" : "  File \"c:\\Users\\tyler.tang\\Desktop\\code\\tylerhub\\demo\\walaopay_deposit\\action_bin\\test_walaopay_deposti.py\", line 82, in test_walaopay\n    pytest.assume(walaoPay.exchangeAmount==round(walaoPay.lowestDeposit*alaoPay.baseCharge))\n",
      "steps" : [ {
        "name" : "断言汇率是否与数据库一致,转换金额是否计算正确",
        "time" : {
          "start" : 1632391327303,
          "stop" : 1632391328384,
          "duration" : 1081
        },
        "status" : "broken",
        "statusMessage" : "NameError: name 'alaoPay' is not defined\n",
        "statusTrace" : "  File \"c:\\Users\\tyler.tang\\Desktop\\code\\tylerhub\\demo\\walaopay_deposit\\action_bin\\test_walaopay_deposti.py\", line 82, in test_walaopay\n    pytest.assume(walaoPay.exchangeAmount==round(walaoPay.lowestDeposit*alaoPay.baseCharge))\n",
        "steps" : [ ],
        "attachments" : [ ],
        "parameters" : [ ],
        "hasContent" : true,
        "stepsCount" : 0,
        "attachmentsCount" : 0,
        "shouldDisplayMessage" : true
      } ],
      "attachments" : [ {
        "uid" : "81aeb111e879fc72",
        "name" : "低于最低金额入金",
        "source" : "81aeb111e879fc72.png",
        "type" : "image/png",
        "size" : 351996
      }, {
        "uid" : "2f2cd6adaed9c958",
        "name" : "高于最高金额入金",
        "source" : "2f2cd6adaed9c958.png",
        "type" : "image/png",
        "size" : 355915
      } ],
      "parameters" : [ ],
      "hasContent" : true,
      "stepsCount" : 1,
      "attachmentsCount" : 2,
      "shouldDisplayMessage" : false
    } ],
    "attachments" : [ ],
    "parameters" : [ ],
    "hasContent" : true,
    "stepsCount" : 6,
    "attachmentsCount" : 2,
    "shouldDisplayMessage" : true
  },
  "afterStages" : [ {
    "name" : "xunit_setup_class_fixture_Test_addEwallet::0",
    "time" : {
      "start" : 1632391375880,
      "stop" : 1632391375880,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "hasContent" : false,
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false
  } ],
  "labels" : [ {
    "name" : "epic",
    "value" : "walao pay入金"
  }, {
    "name" : "feature",
    "value" : "bos判断walaopay入金方式是否开启，判断当前账号是否存在该入金方式，测试最低最高金额入金"
  }, {
    "name" : "story",
    "value" : "用例执行"
  }, {
    "name" : "tag",
    "value" : "flaky(reruns=2, reruns_delay=2)"
  }, {
    "name" : "parentSuite",
    "value" : "demo.walaopay_deposit.action_bin"
  }, {
    "name" : "suite",
    "value" : "test_walaopay_deposti"
  }, {
    "name" : "subSuite",
    "value" : "Test_addEwallet"
  }, {
    "name" : "host",
    "value" : "SZ01-QA-G-10"
  }, {
    "name" : "thread",
    "value" : "26200-MainThread"
  }, {
    "name" : "framework",
    "value" : "pytest"
  }, {
    "name" : "language",
    "value" : "cpython3"
  }, {
    "name" : "package",
    "value" : "demo.walaopay_deposit.action_bin.test_walaopay_deposti"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ {
    "name" : "data",
    "value" : "{'主账号': 1000005349.0, '邮箱': 'tyler.tang@test.com', '密码': 'Tl123456', '交易账号': 672006152.0, '入金前余额': '', '入金后余额': ''}"
  } ],
  "links" : [ ],
  "hidden" : true,
  "retry" : true,
  "extra" : {
    "categories" : [ ],
    "tags" : [ "flaky(reruns=2, reruns_delay=2)" ]
  },
  "source" : "3a159775632b49a6.json",
  "parameterValues" : [ "{'主账号': 1000005349.0, '邮箱': 'tyler.tang@test.com', '密码': 'Tl123456', '交易账号': 672006152.0, '入金前余额': '', '入金后余额': ''}" ]
}