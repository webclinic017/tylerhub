{
  "uid" : "25f946b5eb5a004f",
  "name" : "ewallet入金测试报告",
  "fullName" : "demo.E-wallet_deposit.e-wallet_deposit_bin.test_ewallet_deposit.Test_Ewallet_deposit#test_deposit_of_ewallet",
  "historyId" : "fed3779c8b077e420fb4a070602b992a",
  "time" : {
    "start" : 1654850945510,
    "stop" : 1654851049071,
    "duration" : 103561
  },
  "description" : "读取测试文档数据，执行用例",
  "descriptionHtml" : "<p>读取测试文档数据，执行用例</p>\n",
  "status" : "broken",
  "statusMessage" : "ValueError: Cannot open console output buffer for reading",
  "statusTrace" : "self = <test_ewallet_deposit.Test_Ewallet_deposit object at 0x08CF8A60>, data = {'主账号': 1000005349.0, '交易账号': 66200218.0, '入金金额': 66.0}\n\n    @allure.feature('随机选择电子钱包中的一种渠道入金')\n    @allure.title('ewallet入金测试报告')\n    @allure.story('用例执行')\n    @allure.description('读取测试文档数据，执行用例')\n    @pytest.mark.parametrize('data',testdata)\n    def test_deposit_of_ewallet(self,data):\n        print('当前测试数据：主账号：{}，交易账号：{}，入金金额：{}'.format(int(data['主账号']),int(data['交易账号']),int(data['入金金额'])))\n    \n        with allure.step('获取当前测试数据下标'):\n            self.data_index=testdata.index(data)\n    \n        with allure.step('从bos登录cp'):\n            ewallet.bos_to_cp(int(data['主账号']))\n    \n        with allure.step('判断当前交易账号是否存在电子钱包入金方式'):\n            if ewallet.judge_ewalletpay():\n                with allure.step('存在电子钱包入金方式'):\n    \n                    with open(ewallet.payTypePicPath,'rb') as f: #入金方式截图\n                        comtent=f.read()\n                    allure.attach(comtent,'入金方式',allure.attachment_type.PNG)\n    \n                    with allure.step('随机选择一种渠道入金'):\n                        ewallet.deposit_ewallet(int(data['交易账号']),int(data['入金金额']))\n    \n>                       with open(ewallet.depositSuccessPicPath,'rb') as f: #渠道入金成功截图\nE                       ValueError: Cannot open console output buffer for reading\n\ndemo\\E-wallet_deposit\\e-wallet_deposit_bin\\test_ewallet_deposit.py:76: ValueError",
  "flaky" : false,
  "newFailed" : false,
  "beforeStages" : [ ],
  "testStage" : {
    "description" : "读取测试文档数据，执行用例",
    "status" : "broken",
    "statusMessage" : "ValueError: Cannot open console output buffer for reading",
    "statusTrace" : "self = <test_ewallet_deposit.Test_Ewallet_deposit object at 0x08CF8A60>, data = {'主账号': 1000005349.0, '交易账号': 66200218.0, '入金金额': 66.0}\n\n    @allure.feature('随机选择电子钱包中的一种渠道入金')\n    @allure.title('ewallet入金测试报告')\n    @allure.story('用例执行')\n    @allure.description('读取测试文档数据，执行用例')\n    @pytest.mark.parametrize('data',testdata)\n    def test_deposit_of_ewallet(self,data):\n        print('当前测试数据：主账号：{}，交易账号：{}，入金金额：{}'.format(int(data['主账号']),int(data['交易账号']),int(data['入金金额'])))\n    \n        with allure.step('获取当前测试数据下标'):\n            self.data_index=testdata.index(data)\n    \n        with allure.step('从bos登录cp'):\n            ewallet.bos_to_cp(int(data['主账号']))\n    \n        with allure.step('判断当前交易账号是否存在电子钱包入金方式'):\n            if ewallet.judge_ewalletpay():\n                with allure.step('存在电子钱包入金方式'):\n    \n                    with open(ewallet.payTypePicPath,'rb') as f: #入金方式截图\n                        comtent=f.read()\n                    allure.attach(comtent,'入金方式',allure.attachment_type.PNG)\n    \n                    with allure.step('随机选择一种渠道入金'):\n                        ewallet.deposit_ewallet(int(data['交易账号']),int(data['入金金额']))\n    \n>                       with open(ewallet.depositSuccessPicPath,'rb') as f: #渠道入金成功截图\nE                       ValueError: Cannot open console output buffer for reading\n\ndemo\\E-wallet_deposit\\e-wallet_deposit_bin\\test_ewallet_deposit.py:76: ValueError",
    "steps" : [ {
      "name" : "获取当前测试数据下标",
      "time" : {
        "start" : 1654850945512,
        "stop" : 1654850945512,
        "duration" : 0
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "shouldDisplayMessage" : false,
      "attachmentsCount" : 0,
      "hasContent" : false,
      "stepsCount" : 0
    }, {
      "name" : "从bos登录cp",
      "time" : {
        "start" : 1654850945512,
        "stop" : 1654850975099,
        "duration" : 29587
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "shouldDisplayMessage" : false,
      "attachmentsCount" : 0,
      "hasContent" : false,
      "stepsCount" : 0
    }, {
      "name" : "判断当前交易账号是否存在电子钱包入金方式",
      "time" : {
        "start" : 1654850975099,
        "stop" : 1654851049053,
        "duration" : 73954
      },
      "status" : "broken",
      "statusMessage" : "ValueError: Cannot open console output buffer for reading\n",
      "statusTrace" : "  File \"c:\\Users\\tyler.tang\\Desktop\\HUBCode\\tylerhub\\demo\\E-wallet_deposit\\e-wallet_deposit_bin\\test_ewallet_deposit.py\", line 76, in test_deposit_of_ewallet\n    with open(ewallet.depositSuccessPicPath,'rb') as f: #渠道入金成功截图\n",
      "steps" : [ {
        "name" : "存在电子钱包入金方式",
        "time" : {
          "start" : 1654850976674,
          "stop" : 1654851049053,
          "duration" : 72379
        },
        "status" : "broken",
        "statusMessage" : "ValueError: Cannot open console output buffer for reading\n",
        "statusTrace" : "  File \"c:\\Users\\tyler.tang\\Desktop\\HUBCode\\tylerhub\\demo\\E-wallet_deposit\\e-wallet_deposit_bin\\test_ewallet_deposit.py\", line 76, in test_deposit_of_ewallet\n    with open(ewallet.depositSuccessPicPath,'rb') as f: #渠道入金成功截图\n",
        "steps" : [ {
          "name" : "随机选择一种渠道入金",
          "time" : {
            "start" : 1654850976689,
            "stop" : 1654851049051,
            "duration" : 72362
          },
          "status" : "broken",
          "statusMessage" : "ValueError: Cannot open console output buffer for reading\n",
          "statusTrace" : "  File \"c:\\Users\\tyler.tang\\Desktop\\HUBCode\\tylerhub\\demo\\E-wallet_deposit\\e-wallet_deposit_bin\\test_ewallet_deposit.py\", line 76, in test_deposit_of_ewallet\n    with open(ewallet.depositSuccessPicPath,'rb') as f: #渠道入金成功截图\n",
          "steps" : [ ],
          "attachments" : [ ],
          "parameters" : [ ],
          "shouldDisplayMessage" : true,
          "attachmentsCount" : 0,
          "hasContent" : true,
          "stepsCount" : 0
        } ],
        "attachments" : [ {
          "uid" : "e93f10955310c27e",
          "name" : "入金方式",
          "source" : "e93f10955310c27e.png",
          "type" : "image/png",
          "size" : 397347
        } ],
        "parameters" : [ ],
        "shouldDisplayMessage" : false,
        "attachmentsCount" : 1,
        "hasContent" : true,
        "stepsCount" : 1
      } ],
      "attachments" : [ ],
      "parameters" : [ ],
      "shouldDisplayMessage" : false,
      "attachmentsCount" : 1,
      "hasContent" : true,
      "stepsCount" : 2
    } ],
    "attachments" : [ ],
    "parameters" : [ ],
    "shouldDisplayMessage" : true,
    "attachmentsCount" : 1,
    "hasContent" : true,
    "stepsCount" : 5
  },
  "afterStages" : [ ],
  "labels" : [ {
    "name" : "feature",
    "value" : "随机选择电子钱包中的一种渠道入金"
  }, {
    "name" : "story",
    "value" : "用例执行"
  }, {
    "name" : "parentSuite",
    "value" : "demo.E-wallet_deposit.e-wallet_deposit_bin"
  }, {
    "name" : "suite",
    "value" : "test_ewallet_deposit"
  }, {
    "name" : "subSuite",
    "value" : "Test_Ewallet_deposit"
  }, {
    "name" : "host",
    "value" : "SZ01-QA-G-10"
  }, {
    "name" : "thread",
    "value" : "10936-MainThread"
  }, {
    "name" : "framework",
    "value" : "pytest"
  }, {
    "name" : "language",
    "value" : "cpython3"
  }, {
    "name" : "package",
    "value" : "demo.E-wallet_deposit.e-wallet_deposit_bin.test_ewallet_deposit"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ {
    "name" : "data",
    "value" : "{'主账号': 1000005349.0, '交易账号': 66200218.0, '入金金额': 66.0}"
  } ],
  "links" : [ ],
  "hidden" : true,
  "retry" : true,
  "extra" : {
    "categories" : [ ],
    "tags" : [ ]
  },
  "source" : "25f946b5eb5a004f.json",
  "parameterValues" : [ "{'主账号': 1000005349.0, '交易账号': 66200218.0, '入金金额': 66.0}" ]
}